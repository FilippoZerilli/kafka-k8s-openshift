apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 9092
    name: server
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-svc
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        scheduler.alpha.kubernetes.io/affinity: >
          {
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [{
                "labelSelector": {
                  "matchExpressions": [{
                    "key": "app",
                    "operator": "In",
                    "values": ["kafka"]
                  }]
                },
                "topologyKey": "kubernetes.io/hostname"
              }]
            }
          }
        pod.alpha.kubernetes.io/init-containers: '[
           {
             "name": "clean-volumes-lost-found",
             "image": "busybox",
             "command": ["rmdir", "/opt/kafka/logs/lost+found", "/opt/kafka/zookeeper/lost+found"],
             "volumeMounts": [
               {
                 "name": "kafka-logs",
                 "mountPath": "/opt/kafka/logs"
               },
               {
                 "name": "zookeeper-data",
                 "mountPath": "/opt/kafka/zookeeper"
               }
             ]
           }
        ]'
    spec:
      containers:
      - name: kafka
        imagePullPolicy: Always
        image: engapa/kafka:2.12-0.10.1.1
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
        ports:
        - containerPort: 9092
          name: broker-port
        env:
        - name: KAFKA_REPLICAS
          value: "3"
        - name: SERVER_zookeeper_connection_timeout_ms
          value: "300000"
        command:
        - /bin/bash
        - -c
        - source bin/kafka_setup.sh && bin/kafka_server.sh start
        readinessProbe:
          exec:
            command:
            - kafka_server.sh
            - status
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - kafka_server.sh
            - status
          initialDelaySeconds: 15
          timeoutSeconds: 5
        volumeMounts:
        - name: kafka-logs
          mountPath: /opt/kafka/logs
        - name: zookeeper-data
          mountPath: /opt/kafka/zookeeper
  volumeClaimTemplates:
  - metadata:
      name: kafka-logs
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "10Gi"
  - metadata:
      name: zookeeper-data
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "10Gi"
